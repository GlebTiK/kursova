/*
 * This file is generated by jOOQ.
 */
package kpi.hlibsukhoruchkin.kursova.jooq.tables.records;


import kpi.hlibsukhoruchkin.kursova.jooq.tables.Users;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UsersRecord extends UpdatableRecordImpl<UsersRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>kursova.users.Login</code>.
     */
    public void setLogin(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>kursova.users.Login</code>.
     */
    public String getLogin() {
        return (String) get(0);
    }

    /**
     * Setter for <code>kursova.users.PasswordHash</code>.
     */
    public void setPasswordhash(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>kursova.users.PasswordHash</code>.
     */
    public String getPasswordhash() {
        return (String) get(1);
    }

    /**
     * Setter for <code>kursova.users.UserID</code>.
     */
    public void setUserid(ULong value) {
        set(2, value);
    }

    /**
     * Getter for <code>kursova.users.UserID</code>.
     */
    public ULong getUserid() {
        return (ULong) get(2);
    }

    /**
     * Setter for <code>kursova.users.RoleID</code>.
     */
    public void setRoleid(ULong value) {
        set(3, value);
    }

    /**
     * Getter for <code>kursova.users.RoleID</code>.
     */
    public ULong getRoleid() {
        return (ULong) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<ULong> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UsersRecord
     */
    public UsersRecord() {
        super(Users.USERS);
    }

    /**
     * Create a detached, initialised UsersRecord
     */
    public UsersRecord(String login, String passwordhash, ULong userid, ULong roleid) {
        super(Users.USERS);

        setLogin(login);
        setPasswordhash(passwordhash);
        setUserid(userid);
        setRoleid(roleid);
        resetChangedOnNotNull();
    }
}
