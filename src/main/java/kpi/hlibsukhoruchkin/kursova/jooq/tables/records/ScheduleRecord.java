/*
 * This file is generated by jOOQ.
 */
package kpi.hlibsukhoruchkin.kursova.jooq.tables.records;


import java.time.LocalDateTime;

import kpi.hlibsukhoruchkin.kursova.jooq.tables.Schedule;

import org.jooq.Record2;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ScheduleRecord extends UpdatableRecordImpl<ScheduleRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>kursova.schedule.ShowID</code>.
     */
    public void setShowid(ULong value) {
        set(0, value);
    }

    /**
     * Getter for <code>kursova.schedule.ShowID</code>.
     */
    public ULong getShowid() {
        return (ULong) get(0);
    }

    /**
     * Setter for <code>kursova.schedule.ShowTime</code>.
     */
    public void setShowtime(LocalDateTime value) {
        set(1, value);
    }

    /**
     * Getter for <code>kursova.schedule.ShowTime</code>.
     */
    public LocalDateTime getShowtime() {
        return (LocalDateTime) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<LocalDateTime, ULong> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ScheduleRecord
     */
    public ScheduleRecord() {
        super(Schedule.SCHEDULE);
    }

    /**
     * Create a detached, initialised ScheduleRecord
     */
    public ScheduleRecord(ULong showid, LocalDateTime showtime) {
        super(Schedule.SCHEDULE);

        setShowid(showid);
        setShowtime(showtime);
        resetChangedOnNotNull();
    }
}
